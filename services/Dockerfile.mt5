FROM alpine:3.15 AS st-builder

RUN apk add --no-cache make gcc git freetype-dev \
    fontconfig-dev musl-dev xproto libx11-dev \
    libxft-dev libxext-dev
RUN git clone https://github.com/DenisKramer/st.git /work
WORKDIR /work
RUN make

# ----------------------------------------------------------------------------

FROM alpine:3.15 AS xdummy-builder

RUN apk add --no-cache make gcc freetype-dev \
    fontconfig-dev musl-dev xproto libx11-dev \
    libxft-dev libxext-dev avahi-libs libcrypto3 libssl3 libvncserver libx11 libxdamage libxext libxfixes libxi libxinerama libxrandr libxtst musl samba-winbind 
RUN apk add --no-cache linux-headers
RUN apk add x11vnc 
RUN Xdummy -install

# ----------------------------------------------------------------------------

LABEL org.opencontainers.image.source=https://github.com/FortesenseLabs/metatrader-terminal
LABEL org.opencontainers.image.description="Metatrader 5 Terminal(with nats server)"
LABEL org.opencontainers.image.licenses=MIT

# ----------------------------------------------------------------------------
# FROM alpine:3.15 AS base
# FROM nats:2.7.4-alpine
FROM nats:2.8.4-alpine3.15 AS base 

USER root
ENV WINEPREFIX=/root/.wine
ENV WINEARCH=win64
ENV DISPLAY :0
ENV USER=root
ENV PASSWORD=root
ENV HOME=/root
# ENV NOVNC_TAG="v1.3.0"
# ENV WEBSOCKIFY_TAG="v0.10.0"

WORKDIR /app
COPY nats.conf ./

# Update package lists
RUN apk update 

# Basic init and admin tools
RUN apk add --update --no-cache python3-dev py3-setuptools sudo wget supervisor \
    && wget https://bootstrap.pypa.io/get-pip.py -O - > /$HOME/get-pip.py \
    && python3 /$HOME/get-pip.py \
    && pip install --upgrade pip \
    && echo "$USER:$PASSWORD" | /usr/sbin/chpasswd \
    && rm -rf /apk /tmp/* /var/cache/apk/* /$HOME/get-pip.py 

# Install X11 server and dummy device
RUN apk add --no-cache libcrypto3 
RUN apk add --no-cache xorg-server xf86-video-dummy \
    && apk add libressl3.1-libcrypto --no-cache --repository http://dl-3.alpinelinux.org/alpine/v3.13/main/ \
    && apk add libressl3.1-libssl --no-cache --repository http://dl-3.alpinelinux.org/alpine/v3.13/main/ \
    && apk add x11vnc --no-cache --repository http://dl-3.alpinelinux.org/alpine/v3.15/community/ \
    && rm -rf /apk /tmp/* /var/cache/apk/*
COPY --from=xdummy-builder /usr/bin/Xdummy.so /usr/bin/Xdummy.so
COPY assets/xorg.conf /etc/X11/xorg.conf
COPY assets/xorg.conf.d /etc/X11/xorg.conf.d

# Configure init
COPY assets/supervisord.conf /etc/supervisord.conf

# Openbox window manager
RUN apk --no-cache add openbox  \
    && rm -rf /apk /tmp/* /var/cache/apk/*
COPY assets/openbox/mayday/mayday-arc /usr/share/themes/mayday-arc
COPY assets/openbox/mayday/mayday-arc-dark /usr/share/themes/mayday-arc-dark
COPY assets/openbox/mayday/mayday-grey /usr/share/themes/mayday-grey
COPY assets/openbox/mayday/mayday-plane /usr/share/themes/mayday-plane
COPY assets/openbox/mayday/thesis /usr/share/themes/thesis
COPY assets/openbox/rc.xml /etc/xdg/openbox/rc.xml
COPY assets/openbox/menu.xml /etc/xdg/openbox/menu.xml

# Metatrader
COPY Metatrader-5 /root/Metatrader
COPY dwxconnect/mql/* /root/Metatrader/MQL5/Experts/
COPY server /root/server 
COPY assets/start_server.sh /root/start_server.sh
RUN  pip install -r /root/server/requirements.txt

# Login Manager
RUN apk --no-cache add slim consolekit \
    && rm -rf /apk /tmp/* /var/cache/apk/*
RUN /usr/bin/dbus-uuidgen --ensure=/etc/machine-id
COPY assets/slim/slim.conf /etc/slim.conf
COPY assets/slim/alpinelinux /usr/share/slim/themes/alpinelinux

# A decent system font
RUN apk add --no-cache font-noto \
    && rm -rf /apk /tmp/* /var/cache/apk/*
COPY assets/fonts.conf /etc/fonts/fonts.conf

# st  as terminal
RUN apk add --no-cache freetype fontconfig xproto libx11 libxft libxext ncurses \
    && rm -rf /apk /tmp/* /var/cache/apk/*
COPY --from=st-builder /work/st /usr/bin/st
COPY --from=st-builder /work/st.info /etc/st/st.info
RUN tic -sx /etc/st/st.info

# Some other resources
RUN apk add --no-cache xset \
    && rm -rf /apk /tmp/* /var/cache/apk/*
COPY assets/xinit/Xresources /etc/X11/Xresources
COPY assets/xinit/xinitrc.d /etc/X11/xinit/xinitrc.d

COPY assets/x11vnc-session.sh /root/x11vnc-session.sh
COPY assets/start.sh /root/start.sh

# wine 
RUN apk update \
    && apk add samba-winbind \
    && apk add wine \
    && ln -s /usr/bin/wine64 /usr/bin/wine

# Add noVNC and websockify
# COPY assets/start_novnc.sh /root/start_novnc.sh
# RUN apk --no-cache --update --upgrade add \
#     bash \
#     python3 \
#     python3-dev \
#     gfortran \
#     py-pip \
#     build-base \
#     procps \
#     git \
#     && rm -rf /apk /tmp/* /var/cache/apk/*

# # Upgrade pip and install numpy
# RUN python3 -m pip install --upgrade pip \
#     && pip install --no-cache-dir numpy

# RUN git config --global advice.detachedHead false && \
#     git clone https://github.com/novnc/noVNC --branch ${NOVNC_TAG} /root/noVNC && \
#     git clone https://github.com/novnc/websockify --branch ${WEBSOCKIFY_TAG} /root/noVNC/utils/websockify

# RUN cp /root/noVNC/vnc.html /root/noVNC/index.html

# RUN sed -i "/wait ${proxy_pid}/i if [ -n \"\$AUTOCONNECT\" ]; then sed -i \"s/'autoconnect', false/'autoconnect', '\$AUTOCONNECT'/\" /root/noVNC/app/ui.js; fi" /root/noVNC/utils/novnc_proxy

# RUN sed -i "/wait ${proxy_pid}/i if [ -n \"\$VNC_PASSWORD\" ]; then sed -i \"s/WebUtil.getConfigVar('password')/'\$VNC_PASSWORD'/\" /root/noVNC/app/ui.js; fi" /root/noVNC/utils/novnc_proxy

# RUN sed -i "/wait ${proxy_pid}/i if [ -n \"\$VIEW_ONLY\" ]; then sed -i \"s/UI.rfb.viewOnly = UI.getSetting('view_only');/UI.rfb.viewOnly = \$VIEW_ONLY;/\" /root/noVNC/app/ui.js; fi" /root/noVNC/utils/novnc_proxy
# EXPOSE 5901

WORKDIR /$HOME/

# Expose ports
EXPOSE 5900 8000 4222 8080

# Start supervisord
CMD ["/usr/bin/supervisord","-c","/etc/supervisord.conf"]
